{"version":3,"sources":["index.js"],"names":["_runtime","_interopRequireDefault","require","_request","Page","data","address","cart","totalPrice","totalNum","wx","getStorageSync","filter","all","provinceName","cityName","detailInfo","v","goods_price","num","this","setData","setStorageSync","token","header","order_price","consignee_addr","goods","orderParams","res","async","_context","prev","next","handleOrderPay","navigateTo","abrupt","console","log","Authorization","forEach","push","goods_id","awrap","request","method","goods_number","sent","stop"],"mappings":"aAgBA,IAAAA,SAAAC,uBAAAC,QAAA,8BACAC,SAAAD,QAAA,oGAEAE,KAAK,CACHC,KAAM,CACJC,QAAS,GACTC,KAAM,GAHNC,WAAC,EACHH,SAAM,GAEJE,OAHC,WAKDE,IAAAA,EAAUC,GAAAC,eAAA,WALTJ,EAAAG,GAAAC,eAOM,SAAA,GAEPJ,EAAMD,EAAOM,OAAMD,SAAAA,GAAAA,OAAAA,EAAAA,UAKnBL,EAAQO,IAHRP,EAAQQ,aAKNR,EAAQS,SAHVR,EAAOA,WAAYD,EAAQU,WAAR,IAAnBR,EAAA,EACAF,EACEA,EAIFC,EAAIC,QAAAA,SAAUS,GACdT,GAAAS,EAAAC,YAAAD,EAAAE,IACAZ,GAAaU,EAAAE,MAGZC,KACDC,QAAA,CAEEd,KAAAA,EADFC,WAAAA,EACED,SAAAA,EACAC,QAAAA,IAEAF,GAAAA,eAAAA,OAAAA,IAECgB,eAhCF,WAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAnB,EAAAoB,EAAAC,EAAAC,EAAA,OAAA7B,SAAA,QAAA8B,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAvB,GAAAY,eAkCGY,QAlCH,2JAAAX,EAAAb,GAAAC,eAAA,SAAA,CAAAoB,EAAAE,KAAA,EAAA,MAAA,OA2CCvB,GAAGyB,WAAW,CAHVZ,IAAAA,sBAxCLQ,EAAAK,OAAA,UAAA,KAAA,EAAA,OAkDDC,QAAQC,IAAI,kBAPId,EAGd,CAAAe,cAAAhB,GA9CDE,EAAAL,KAAAf,KAAAG,WAyDKkB,EAAiBN,KAAKf,KAAKC,QAAQO,IAzDxCN,EAAAa,KAAAf,KAAAE,KAkDD8B,EAAAA,GAGA9B,EAAAiC,QAAA,SAAAvB,GAAA,OAQEU,EAAMc,KAAK,CAPPjB,SAtDLP,EAAAyB,SAsDgBH,aAAAA,EAAAA,UAAFrB,YACfD,EAAAC,gBAEMQ,EAAAA,CAzDLD,YAAAA,EAyDgCnB,eAAAA,EAzDhCqB,MAAAA,GAAAI,EAAAE,KAAA,GAAAjC,SAAA,QAAA2C,OAAA,EAAAxC,SAAAyC,SAAA,CA4DDrC,IAAAA,oBAAasC,OAAA,OAETH,KAAAA,EACAI,OAAAA,KA/DH,KAAA,GA2DGnB,EA3DHI,EAAAgB,KA6DYV,QAAAC,IADAT,GA5DZ,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAiB,SAAA,KAAA5B","file":"index.min.js","sourcesContent":["/**\n  支付页面业务逻辑分析：\n  页面加载的时候\n    从缓存中获取购物车数据 渲染到页面中(checked为true)\n  微信支付\n    企业账号\n    企业账号的后台中必须给开发者添加到白名单\n      一个appid可以绑定多个开发者 这些开发者就可以共用appid和开发权限了\n  支付流程\n    创建订单(获取订单编号) -> 准备预支付(获取支付参数) -> 发起微信支付(提交参数) -> 查询订单\n  支付按钮\n    先判断缓存中是否有token\n    没有 跳转页面授权 进行获取token\n    有token 进行剩下的逻辑\n */\n\nimport regeneratorRuntime from \"../../lib/runtime/runtime\";\nimport { request } from \"../../request/request.js\";\n\nPage({\n  data: {\n    address: {},\n    cart: [],\n    totalPrice: 0,\n    totalNum: 0,\n  },\n  onShow() {\n    // 获取缓存中的地址\n    const address = wx.getStorageSync(\"address\");\n    // 获取缓存中的购物车数据\n    let cart = wx.getStorageSync(\"cart\") || [];\n    // 过滤出checked属性 提取出选择的商品\n    cart = cart.filter((v) => v.checked);\n    address.all =\n      address.provinceName +\n      address.cityName +\n      address.countyName +\n      address.detailInfo;\n    let totalPrice = 0;\n    let totalNum = 0;\n    cart.forEach((v) => {\n      totalPrice += v.goods_price * v.num;\n      totalNum += v.num;\n    });\n    // 设置data数据\n    this.setData({\n      cart,\n      totalPrice,\n      totalNum,\n      address,\n    });\n    wx.setStorageSync(\"cart\", cart);\n  },\n  async handleOrderPay() {\n    wx.setStorageSync(\n      \"token\",\n      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjIzLCJpYXQiOjE1NjQ3MzAwNzksImV4cCI6MTAwMTU2NDczMDA3OH0.YPt-XeLnjV-_1ITaXGY2FhxmCe4NvXuRnRB8OMCfnPo\"\n    );\n    // 判断缓存中有无token\n    const token = wx.getStorageSync(\"token\");\n    if (!token) {\n      // 不存在就跳转页面\n      wx.navigateTo({\n        url: \"/pages/auth/index\",\n      });\n      // 返回\n      return;\n    }\n\n    console.log(\"Yijing cunzai \");\n\n    // 创建订单\n    // 准备请求头\n    const header = { Authorization: token };\n    // 准备请求体参数\n    const order_price = this.data.totalPrice;\n    const consignee_addr = this.data.address.all;\n    let cart = this.data.cart;\n    let goods = [];\n    cart.forEach((v) =>\n      goods.push({\n        goods_id: v.goods_id,\n        goods_number: v.goods_num,\n        goods_price: v.goods_price,\n      })\n    );\n    const orderParams = { order_price, consignee_addr, goods };\n    // 准备发送请求 创建订单 获取订单编号\n    const res = await request({\n      url: \"/my/orders/create\",\n      method: \"post\",\n      data: orderParams,\n      header,\n    });\n    console.log(res);\n  },\n});\n"]}