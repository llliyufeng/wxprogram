{"version":3,"sources":["index.js"],"names":["Page","data","goodsData","goodsInfo","onLoad","options","goods_id","getGoodsDetail","url","setData","goods_name","goods_price","goods_introduce","pics","handlePreviewImage","e","urls","map","v","pics_mid","current","currentTarget","dataset","wx","previewImage","handleCartAdd","cart","getStorageSync","index","findIndex","num","checked","push","setStorageSync","showToast","title","icon","mask"],"mappings":";;AAiBA;;AACA;;;;AAlBA;;;;;;;;;;;;;;;;AAmBAA,IAAI,CAAC;AACH;;;AAGAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GAJH;AAOHC,EAAAA,SAAS,EAAE,EAPR;;AAQH;;;AAGAC,EAAAA,MAAM,EAAE,gBAAUC,OAAV,EAAmB;AAAA,QACjBC,QADiB,GACJD,OADI,CACjBC,QADiB;AAEzB,SAAKC,cAAL,CAAoBD,QAApB;AACD,GAdE;AAeH;AACA;AACMC,EAAAA,cAjBH,0BAiBkBD,QAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAkBuB,sBAAQ;AAC9BE,cAAAA,GAAG,EAAE,eADyB;AAE9BP,cAAAA,IAAI,EAAE;AAAEK,gBAAAA,QAAQ,EAARA;AAAF;AAFwB,aAAR,CAlBvB;;AAAA;AAkBKJ,YAAAA,SAlBL;AAsBD,iBAAKC,SAAL,GAAiBD,SAAjB;AACA,iBAAKO,OAAL,CAAa;AACXP,cAAAA,SAAS,EAAE;AACTQ,gBAAAA,UAAU,EAAER,SAAS,CAACQ,UADb;AAETC,gBAAAA,WAAW,EAAET,SAAS,CAACS,WAFd;AAGTC,gBAAAA,eAAe,EAAEV,SAAS,CAACU,eAHlB;AAITC,gBAAAA,IAAI,EAAEX,SAAS,CAACW;AAJP;AADA,aAAb;;AAvBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCH;AACMC,EAAAA,kBAjCH,8BAiCsBC,CAjCtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCD;AACMC,YAAAA,IAnCL,GAmCY,KAAKb,SAAL,CAAeU,IAAf,CAAoBI,GAApB,CAAwB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,QAAT;AAAA,aAAxB,CAnCZ;AAoCKC,YAAAA,OApCL,GAoCeL,CAAC,CAACM,aAAF,CAAgBC,OAAhB,CAAwBd,GApCvC;AAqCDe,YAAAA,EAAE,CAACC,YAAH,CAAgB;AACdJ,cAAAA,OAAO,EAAPA,OADc;AAEdJ,cAAAA,IAAI,EAAJA;AAFc,aAAhB;;AArCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAS,EAAAA,aAnDG,2BAmDa;AAAA;;AACd;AACA,QAAIC,IAAI,GAAGH,EAAE,CAACI,cAAH,CAAkB,MAAlB,KAA6B,EAAxC,CAFc,CAGd;AAEA;AACA;AACA;AACA;AACA;;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAe,UAACX,CAAD;AAAA,aAAOA,CAAC,CAACZ,QAAF,KAAe,KAAI,CAACH,SAAL,CAAeG,QAArC;AAAA,KAAf,CAAZ;;AACA,QAAIsB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AAEA,WAAKzB,SAAL,CAAe2B,GAAf,GAAqB,CAArB;AACA,WAAK3B,SAAL,CAAe4B,OAAf,GAAyB,IAAzB;AACAL,MAAAA,IAAI,CAACM,IAAL,CAAU,KAAK7B,SAAf;AACD,KAND,MAMO;AACL;AACAuB,MAAAA,IAAI,CAACE,KAAD,CAAJ,CAAYE,GAAZ;AACD,KApBa,CAqBd;;;AACAP,IAAAA,EAAE,CAACU,cAAH,CAAkB,MAAlB,EAA0BP,IAA1B,EAtBc,CAuBd;;AACAH,IAAAA,EAAE,CAACW,SAAH,CAAa;AACXC,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,IAAI,EAAE,SAFK;AAGX;AACAC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;AAjFE,CAAD,CAAJ","sourcesContent":["/*\n本页面实现逻辑：\n1 发送请求和数据\n2 点击轮播图 预览大图\n  1 给轮播图绑定点击事件\n  2 调用小程序的api previewImage\n3 点击加入购物车\n  1 先绑定点击事件\n  2 获取缓存中的购物车数据 数组格式\n  3 先判断 当前的商品是否存在于购物车\n  4 已经存在 修改商品数据 执行购物车数量++ 重新把购物车数组填充回缓存中\n  5 不存在于购物车的数组中 直接给购物车数组添加一个元素 新元素带上num属性 重新把购物车数组填充回缓存中\n  6 弹出添加提示\n\n\n */\n\nimport { request } from \"../../request/request.js\";\nimport regeneratorRuntime from \"../../lib/runtime/runtime\";\nPage({\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    goodsData: {},\n  },\n  goodsInfo: {},\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {\n    const { goods_id } = options;\n    this.getGoodsDetail(goods_id);\n  },\n  // 获取商品详情数据\n  // https://api-hmugo-web.itheima.net/api/public/v1/goods/detail\n  async getGoodsDetail(goods_id) {\n    const goodsData = await request({\n      url: \"/goods/detail\",\n      data: { goods_id },\n    });\n    this.goodsInfo = goodsData;\n    this.setData({\n      goodsData: {\n        goods_name: goodsData.goods_name,\n        goods_price: goodsData.goods_price,\n        goods_introduce: goodsData.goods_introduce,\n        pics: goodsData.pics,\n      },\n    });\n  },\n  // 绑定点击事件\n  async handlePreviewImage(e) {\n    // 先构造要预览的图片数组\n    const urls = this.goodsInfo.pics.map((v) => v.pics_mid);\n    const current = e.currentTarget.dataset.url;\n    wx.previewImage({\n      current,\n      urls,\n    });\n  },\n  // 点击加入购物车\n  // 3 点击加入购物车\n  // 1 先绑定点击事件\n  // 2 获取缓存中的购物车数据 数组格式\n  // 3 先判断 当前的商品是否存在于购物车\n  // 4 已经存在 修改商品数据 执行购物车数量++ 重新把购物车数组填充回缓存中\n  // 5 不存在于购物车的数组中 直接给购物车数组添加一个元素 新元素带上num属性 重新把购物车数组填充回缓存中\n  // 6 弹出添加提示\n\n  handleCartAdd() {\n    // 2 获取缓存中的购物车数据 数组格式\n    let cart = wx.getStorageSync(\"cart\") || [];\n    // 3 先判断 当前的商品是否存在于购物车\n\n    // findIndex\n    // findIndex() 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置。\n    // findIndex() 方法为数组中的每个元素都调用一次函数执行：\n    // 当数组中的元素在测试条件时返回 true 时, findIndex() 返回符合条件的元素的索引位置，之后的值不会再调用执行函数。\n    // 如果没有符合条件的元素返回 -1\n    let index = cart.findIndex((v) => v.goods_id === this.goodsInfo.goods_id);\n    if (index === -1) {\n      // 不存在 第一次添加\n\n      this.goodsInfo.num = 1;\n      this.goodsInfo.checked = true;\n      cart.push(this.goodsInfo);\n    } else {\n      // 存在\n      cart[index].num++;\n    }\n    // 重新把购物车数组填充回缓存中;\n    wx.setStorageSync(\"cart\", cart);\n    // 弹窗提示\n    wx.showToast({\n      title: \"加入成功\",\n      icon: \"success\",\n      // true防止用户手抖 如果为true 默认时间后触发\n      mask: true,\n    });\n  },\n});\n"],"file":"index.dev.js"}