{"version":3,"sources":["index.js"],"names":["_request","require","_runtime","_interopRequireDefault","Page","data","goodsData","goodsInfo","onLoad","options","goods_id","this","getGoodsDetail","async","_context","prev","next","awrap","url","sent","goods_name","goods_price","goods_introduce","pics","stop","urls","current","_context2","map","v","pics_mid","e","currentTarget","dataset","wx","previewImage","handleCartAdd","_this","cart","getStorageSync","index","findIndex","checked","num","setStorageSync","showToast","title","icon","mask"],"mappings":"aAiBA,IAAAA,SAAAC,QAAA,4BACAC,SAAAC,uBAAAF,QAAA,sGACAG,KAAK,CAIHC,KAAM,CAJJC,UAAC,IAOHC,UAAW,GAHLC,OAJH,SAAAC,GAAA,IAOMC,EAPND,EAOMC,SAMPC,KAAKC,eAAeF,IAFhBE,eAXH,SAWKF,GAXL,IAAAJ,EAAA,OAAAJ,SAAA,QAAAW,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAd,SAAA,QAAAe,OAYOP,EAAAA,SAAAA,SADiB,CAEzBQ,IAAKN,gBAbJP,KAAA,CAAAK,SAAAA,MAAA,KAAA,EAYOA,EAZPI,EAAAK,KAgBHR,KAAAJ,UAAAD,EACMM,KAAAA,QAjBH,CAAAN,UAAA,CAAAc,WAAAd,EAAAc,WAAAC,YAAAf,EAAAe,YAAAC,gBAAAhB,EAAAgB,gBAAAC,KAAAjB,EAAAiB,QAAA,KAAA,EAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAAb,OAoBSD,mBApBT,SAoBSA,GApBT,IAAAe,EAAAC,EAAA,OAAAxB,SAAA,QAAAW,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAkB+BS,EAlB/Bd,KAAAJ,UAAAgB,KAAAK,IAAA,SAAAC,GAAA,OAAAA,EAAAC,WAoCKJ,EAAUK,EAAEC,cAAcC,QAAQf,IApCvCgB,GAAAC,aAAA,CAkBK7B,QAAAA,EAINmB,KAAAA,IAtBC,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAAH,SAAA,KAAAb,OAAAyB,cAAA,WAAA,IAAAC,EAAA1B,KAAA2B,EAAAJ,GAAAK,eAAA,SAAA,GAAAC,EAAAF,EAAAG,UAAA,SAAAZ,GAAA,OAAAA,EAAAnB,WAAA2B,EAAA9B,UAAAG,YAAA,IAAA8B,GAmCoC7B,KAAAJ,UAAOsB,IAAEC,EAATnB,KAAAJ,UAnCpCmC,SAAA,EAoCKhB,EAAAA,KAAAA,KApCLnB,YAuCCkB,EAAAA,GAAIkB,MAvCLT,GAAAU,eAAA,OAAAN,GAAAJ,GAAAW,UAAA,CAAAC,MAAA,OAAAC,KAAA,UAAAC,MAAA","file":"index.min.js","sourcesContent":["/*\n本页面实现逻辑：\n1 发送请求和数据\n2 点击轮播图 预览大图\n  1 给轮播图绑定点击事件\n  2 调用小程序的api previewImage\n3 点击加入购物车\n  1 先绑定点击事件\n  2 获取缓存中的购物车数据 数组格式\n  3 先判断 当前的商品是否存在于购物车\n  4 已经存在 修改商品数据 执行购物车数量++ 重新把购物车数组填充回缓存中\n  5 不存在于购物车的数组中 直接给购物车数组添加一个元素 新元素带上num属性 重新把购物车数组填充回缓存中\n  6 弹出添加提示\n\n\n */\n\nimport { request } from \"../../request/request.js\";\nimport regeneratorRuntime from \"../../lib/runtime/runtime\";\nPage({\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    goodsData: {},\n  },\n  goodsInfo: {},\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {\n    const { goods_id } = options;\n    this.getGoodsDetail(goods_id);\n  },\n  // 获取商品详情数据\n  // https://api-hmugo-web.itheima.net/api/public/v1/goods/detail\n  async getGoodsDetail(goods_id) {\n    const goodsData = await request({\n      url: \"/goods/detail\",\n      data: { goods_id },\n    });\n    this.goodsInfo = goodsData;\n    this.setData({\n      goodsData: {\n        goods_name: goodsData.goods_name,\n        goods_price: goodsData.goods_price,\n        goods_introduce: goodsData.goods_introduce,\n        pics: goodsData.pics,\n      },\n    });\n  },\n  // 绑定点击事件\n  async handlePreviewImage(e) {\n    // 先构造要预览的图片数组\n    const urls = this.goodsInfo.pics.map((v) => v.pics_mid);\n    const current = e.currentTarget.dataset.url;\n    wx.previewImage({\n      current,\n      urls,\n    });\n  },\n  // 点击加入购物车\n  // 3 点击加入购物车\n  // 1 先绑定点击事件\n  // 2 获取缓存中的购物车数据 数组格式\n  // 3 先判断 当前的商品是否存在于购物车\n  // 4 已经存在 修改商品数据 执行购物车数量++ 重新把购物车数组填充回缓存中\n  // 5 不存在于购物车的数组中 直接给购物车数组添加一个元素 新元素带上num属性 重新把购物车数组填充回缓存中\n  // 6 弹出添加提示\n\n  handleCartAdd() {\n    // 2 获取缓存中的购物车数据 数组格式\n    let cart = wx.getStorageSync(\"cart\") || [];\n    // 3 先判断 当前的商品是否存在于购物车\n\n    // findIndex\n    // findIndex() 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置。\n    // findIndex() 方法为数组中的每个元素都调用一次函数执行：\n    // 当数组中的元素在测试条件时返回 true 时, findIndex() 返回符合条件的元素的索引位置，之后的值不会再调用执行函数。\n    // 如果没有符合条件的元素返回 -1\n    let index = cart.findIndex((v) => v.goods_id === this.goodsInfo.goods_id);\n    if (index === -1) {\n      // 不存在 第一次添加\n\n      this.goodsInfo.num = 1;\n      this.goodsInfo.checked = true;\n      cart.push(this.goodsInfo);\n    } else {\n      // 存在\n      cart[index].num++;\n    }\n    // 重新把购物车数组填充回缓存中;\n    wx.setStorageSync(\"cart\", cart);\n    // 弹窗提示\n    wx.showToast({\n      title: \"加入成功\",\n      icon: \"success\",\n      // true防止用户手抖 如果为true 默认时间后触发\n      mask: true,\n    });\n  },\n});\n"]}